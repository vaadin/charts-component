{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "vaadin-chart.html",
        "start": {
          "line": 500,
          "column": 6
        },
        "end": {
          "line": 500,
          "column": 42
        }
      },
      "elements": [
        {
          "description": "`<vaadin-chart-series>` is a Polymer 2 element for creating series for Vaadin Charts.\n\n### Basic use\n\nTo use `<vaadin-chart-series>`, simply add it inside a `<vaadin-chart>` element:\n\n```\n <vaadin-chart>\n   <vaadin-chart-series></vaadin-chart-series>\n </vaadin-chart>\n```\n\n`<vaadin-chart-series>` accepts `values` as an array attribute, so you can add it to your element definition:\n\n```\n <vaadin-chart-series values=\"[10,20,30,40,50]\"></vaadin-chart-series>\n```\n\nwhich will add a new line series, where each value will be a data point. \nLook for the Properties session to see all available attributes.\n\n### Dynamically adding and removing series\n\nYou are also able to add and remove series by using DOM API.\n\nTo create a new series, simply call `document.createElement('vaadin-chart-series')` and append it to your `<vaadin-chart>`:\n\n```\n const chart = \\* a <vaadin-chart> reference *\\\n const newSeries = document.createElement('vaadin-chart-series');\n newSeries.values = [10,20,30,40,50];\n chart.appendChild(newSeries);\n```\n\nIn order to remove it, you should use the series to be removed as a reference for the `#removeChild()` call:\n\n```\n const chart = \\* a <vaadin-chart> reference *\\\n const seriesToBeRemoved = \\* a <vaadin-chart-series> reference to remove*\\\n chart.removeChild(seriesToBeRemoved);\n```\n\n(There's an issue with `#remove()` method on Firefox, so we advice to remove the element from its parent)",
          "summary": "",
          "path": "vaadin-chart-series.html",
          "properties": [
            {
              "name": "values",
              "type": "Array",
              "description": "An array of data used by the series.\nFormats dependends on the chart type and can be:\n  - An array of numerical values `[y0, y1, y2, y3,...]`\n  - An array of arrays with 2 values (`x`, `y`) `[ [x0, y0], [x1, y1], [x2, y2], ... ]`\n  - An array of objects, each one describing one point `[ {x: x0, y: y0, name: 'Point0', color: '#FF0000'}, {...}, ...]`\n\n See more in [API Site](https://api.highcharts.com/highcharts/series)\n\nNote that you should always use [Polymer API](https://www.polymer-project.org/2.0/docs/devguide/model-data#array-mutation) \nto mutate the values array in order to make the component aware of the\nchange and be able to syncronize it.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 12
                },
                "end": {
                  "line": 100,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "[]"
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Object with the configured options defined and used to create a series.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 12
                },
                "end": {
                  "line": 109,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 120,
                  "column": 8
                },
                "end": {
                  "line": 125,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "setSeries",
              "description": "Method to attach a series object of type `Highcharts.Series`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 131,
                  "column": 8
                },
                "end": {
                  "line": 136,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "series",
                  "description": "Object of type `Highcharts.Series`"
                }
              ]
            },
            {
              "name": "__valuesObserver",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 138,
                  "column": 8
                },
                "end": {
                  "line": 142,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "__hasSeriesConfig",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 144,
                  "column": 8
                },
                "end": {
                  "line": 146,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            }
          ],
          "staticMethods": [],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.VaadinChartSeries",
          "attributes": [
            {
              "name": "values",
              "description": "An array of data used by the series.\nFormats dependends on the chart type and can be:\n  - An array of numerical values `[y0, y1, y2, y3,...]`\n  - An array of arrays with 2 values (`x`, `y`) `[ [x0, y0], [x1, y1], [x2, y2], ... ]`\n  - An array of objects, each one describing one point `[ {x: x0, y: y0, name: 'Point0', color: '#FF0000'}, {...}, ...]`\n\n See more in [API Site](https://api.highcharts.com/highcharts/series)\n\nNote that you should always use [Polymer API](https://www.polymer-project.org/2.0/docs/devguide/model-data#array-mutation) \nto mutate the values array in order to make the component aware of the\nchange and be able to syncronize it.",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 12
                },
                "end": {
                  "line": 100,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Array"
            },
            {
              "name": "options",
              "description": "Object with the configured options defined and used to create a series.",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 12
                },
                "end": {
                  "line": 109,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Object"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-chart-series"
        },
        {
          "description": "`<vaadin-chart>` is a Polymer 2 element for creating high quality charts.\n\n### Quick Start\n\n1. Create a Polymer application using [Polymer CLI](https://www.polymer-project.org/2.0/docs/tools/polymer-cli)\n```\nmkdir my-app\ncd my-app\npolymer init\nselect `polymer-2-application`\n```\n1. Install Vaadin Charts\n```\nbower install --save vaadin-charts#6.0-preview\n```\n1. Import `<vaadin-chart>` to your app\nEdit the file `src/my-app/my-app.html` and add the following snipped before the `<dom-module>` tag\n```html\n<link rel=\"import\" href=\"../../bower_components/vaadin-charts/vaadin-chart.html\">\n```\n1. Add your first `<vaadin-chart>`\nAlso in `my-app.html` add the following snippet before the `</template>` closing tag\n```html\n<vaadin-chart></vaadin-chart>\n```\n1. Run your app with:\n```\npolymer serve --open\n```\nCongratulations! You have your first Vaadin Chart setup.\n\n### Basic use\n\nNow that we covered the basic steps to create an empty chart, let us show how you can configure it.\n\nThere are two ways of configuring your `<vaadin-chart>` element: **JS API** and **JSON API**.\nNote that you can make use of both APIs in your element.\n\n#### Configuring your chart using JS API\n\nUsing as a base the project created with in Quick Start\n\nDo the following changes in `my-app.html`\n\n1. Set and id for the `<vaadin-chart>` in the template\n```html\n    <vaadin-chart id=\"mychart\"></vaadin-chart>\n```\n1. Add a function that uses `configuration` property (JS Api) to set chart title, categories and data\n```\ninitChartWithJSApi() {\n    Polymer.RenderStatus.beforeNextRender(this, () => {\n       const configuration = this.$.mychart.configuration;\n       configuration.setTitle({ text: 'The chart title' });\n       // By default there is one x axis, it is referenced by configuration.xAxis[0].\n       configuration.xAxis[0].setCategories(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);\n       configuration.addSeries({\n           type: 'column',\n           data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]\n       });\n    });\n}\n```\n1. Call that function from connectedCallback (when the element is added to a document)\n```\nconnectedCallback() {\n    super.connectedCallback();\n    this.initChartWithJSApi();\n}\n```\n1. And finally run your app with:\n```\npolymer serve --open\n```\n\n\n#### Configuring your chart using JS JSON API\n\nJS JSON API is a simple alternative to the JS API.\n\nUsing as a base the project created with in Quick Start\n\nDo the following changes in `my-app.html`\n\n1. Set and id for the `<vaadin-chart>` in the template\n```html\n    <vaadin-chart id=\"mychart\"></vaadin-chart>\n```\n1. Add a function that uses `update` method (JS JSON Api) to set chart title, categories and data\n```\ninitChartWithJSJSONApi() {\n    this.$.mychart.update({\n      title: {\n        text: 'The chart title'\n      },\n      subtitle: {\n        text: 'Subtitle'\n      },\n      xAxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n      },\n      series: [{\n        type: 'column',\n        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]\n      }]\n    });\n}\n```\n1. Call that function from connectedCallback (when the element is added to a document)\n```\nconnectedCallback() {\n    super.connectedCallback();\n    this.initChartWithJSJSONApi();\n}\n```\n1. And finally run your app with:\n```\npolymer serve --open\n```\n\n### Install License Key\nAfter one day using Vaadin Charts in a development environment you will see a pop-up that asks you to enter the license key.\n\nYou can get your trial key from [https://vaadin.com/pro/licenses](https://vaadin.com/pro/licenses).\n\nIf the license is valid, it will be saved to the local storage of the browser and you will not see the pop-up again",
          "summary": "",
          "path": "vaadin-chart.html",
          "properties": [
            {
              "name": "configuration",
              "type": "Object",
              "description": "Configuration object that exposes the JS Api to configure the chart.\n\nMost important methods are:\n- `addSeries (Object options, [Boolean redraw], [Mixed animation])`\n- `addAxis (Object options, [Boolean isX], [Boolean redraw], [Mixed animation])`\n- `setTitle (Object title, object subtitle, Boolean redraw)`\n\nMost important properties are:\n- `configuration.series`: An array of the chart's series. Detailed API for Series object is\n    available in [API Site](http://api.highcharts.com/class-reference/Highcharts.Series)\n- `configuration.xAxis`: An array of the chart's x axes. Detailed API for Axis object is\n    available in [API Site](http://api.highcharts.com/class-reference/Highcharts.Axis)\n- `configuration.yAxis`: An array of the chart's y axes. Detailed API for Axis object is\n    available in [API Site](http://api.highcharts.com/class-reference/Highcharts.Axis)\n- `configuration.title`: The chart title.\n\nFor detailed documentation of available API check the [API site](http://api.highcharts.com/class-reference/classes.list)",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 256,
                  "column": 10
                },
                "end": {
                  "line": 256,
                  "column": 29
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": false
                }
              }
            },
            {
              "name": "_configuration",
              "type": "Object",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 186,
                  "column": 12
                },
                "end": {
                  "line": 186,
                  "column": 34
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "timeline",
              "type": "boolean",
              "description": "Specifies whether the chart is a normal chart or a timeline chart.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 191,
                  "column": 12
                },
                "end": {
                  "line": 194,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "title",
              "type": "string",
              "description": "Represents the title of the chart.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 199,
                  "column": 12
                },
                "end": {
                  "line": 203,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"__updateTitle\""
                }
              }
            },
            {
              "name": "subtitle",
              "type": "string",
              "description": "Represents the subtitle of the chart.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 208,
                  "column": 12
                },
                "end": {
                  "line": 212,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"__updateSubtitle\""
                }
              }
            }
          ],
          "methods": [
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 260,
                  "column": 8
                },
                "end": {
                  "line": 271,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "__addLicenseChecker",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 304,
                  "column": 8
                },
                "end": {
                  "line": 310,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "__addChildObserver",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 312,
                  "column": 8
                },
                "end": {
                  "line": 318,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "__filterSeriesNodes",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 320,
                  "column": 8
                },
                "end": {
                  "line": 322,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                }
              ]
            },
            {
              "name": "__addSeries",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 324,
                  "column": 8
                },
                "end": {
                  "line": 334,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "series"
                }
              ]
            },
            {
              "name": "__isSeriesEmpty",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 336,
                  "column": 8
                },
                "end": {
                  "line": 338,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "series"
                }
              ]
            },
            {
              "name": "disconnectedCalllback",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 341,
                  "column": 8
                },
                "end": {
                  "line": 344,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "update",
              "description": "Update the chart configuration.\nThis JSON API provides a simple single-argument alternative to the configuration property.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 378,
                  "column": 8
                },
                "end": {
                  "line": 410,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "jsonConfiguration",
                  "type": "Object",
                  "description": "Object chart configuration. Most important properties are:\n\n- chart `Object` with options regarding the chart area and plot area as well as general chart options.\n   Detailed API for chart object is available in [API Site](http://api.highcharts.com/highcharts/chart)\n- credits `Object` with options regarding the chart area and plot area as well as general chart options.\n   Detailed API for credits object is available in [API Site](http://api.highcharts.com/highcharts/credits)\n- labels `Object[]` with HTML labels that can be positioned anywhere in the chart area\n   Detailed API for labels object is available in [API Site](http://api.highcharts.com/highcharts/labels)\n- plotOptions `Object` wrapper for config objects for each series type.\n   Detailed API for plotOptions object is available in [API Site](http://api.highcharts.com/highcharts/plotOptions)\n- series `Object[]` the actual series to append to the chart.\n   Detailed API for series object is available in [API Site](http://api.highcharts.com/highcharts/series)\n- subtitle `Object` the chart's subtitle.\n   Detailed API for subtitle object is available in [API Site](http://api.highcharts.com/highcharts/subtitle)\n- title `Object` the chart's main title.\n   Detailed API for title object is available in [API Site](http://api.highcharts.com/highcharts/title)\n- tooltip `Object` Options for the tooltip that appears when the user hovers over a series or point.\n   Detailed API for tooltip object is available in [API Site](http://api.highcharts.com/highcharts/tooltip)\n- xAxis `Object[]` The X axis or category axis. Normally this is the horizontal axis.\n   Detailed API for xAxis object is available in [API Site](http://api.highcharts.com/highcharts/xAxis)\n- yAxis `Object[]` The Y axis or value axis. Normally this is the vertical axis.\n   Detailed API for yAxis object is available in [API Site](http://api.highcharts.com/highcharts/yAxis)\n- zAxis `Object[]` The Z axis or depth axis for 3D plots.\n   Detailed API for zAxis object is available in [API Site](http://api.highcharts.com/highcharts/zAxis)"
                },
                {
                  "name": "resetConfiguration",
                  "type": "Boolean",
                  "description": "Optional boolean that should be set to true if no other chart configuration was set before or\n   if existing configuration should be discarded."
                }
              ]
            },
            {
              "name": "__inflateFunctions",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 412,
                  "column": 8
                },
                "end": {
                  "line": 428,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "jsonConfiguration"
                }
              ]
            },
            {
              "name": "__updateOrAddCredits",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 430,
                  "column": 8
                },
                "end": {
                  "line": 436,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "credits"
                }
              ]
            },
            {
              "name": "__updateOrAddAxes",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 438,
                  "column": 8
                },
                "end": {
                  "line": 451,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "axes"
                },
                {
                  "name": "isX"
                }
              ]
            },
            {
              "name": "__updateOrAddSeries",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 453,
                  "column": 8
                },
                "end": {
                  "line": 468,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "series"
                }
              ]
            },
            {
              "name": "__updateTitle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 470,
                  "column": 8
                },
                "end": {
                  "line": 478,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "newValue"
                }
              ]
            },
            {
              "name": "__updateSubtitle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 480,
                  "column": 8
                },
                "end": {
                  "line": 492,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "newValue"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 493,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.VaadinChart",
          "attributes": [
            {
              "name": "timeline",
              "description": "Specifies whether the chart is a normal chart or a timeline chart.",
              "sourceRange": {
                "start": {
                  "line": 191,
                  "column": 12
                },
                "end": {
                  "line": 194,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "title",
              "description": "Represents the title of the chart.",
              "sourceRange": {
                "start": {
                  "line": 199,
                  "column": 12
                },
                "end": {
                  "line": 203,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "subtitle",
              "description": "Represents the subtitle of the chart.",
              "sourceRange": {
                "start": {
                  "line": 208,
                  "column": 12
                },
                "end": {
                  "line": 212,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "file": "vaadin-chart.html",
                "start": {
                  "line": 37,
                  "column": 4
                },
                "end": {
                  "line": 37,
                  "column": 27
                }
              }
            }
          ],
          "tagname": "vaadin-chart"
        }
      ]
    }
  ]
}
